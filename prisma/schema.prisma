// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  userName   String     @unique
  firstName  String?
  lastName   String?
  bio        String?
  avatarUrl  String?
  password   String?
  isOAuth    Boolean    @default(false)
  role       Role       @default(USER)
  createdAt  DateTime   @default(now()) @map(name: "created_at")
  updatedAt  DateTime   @default(now()) @updatedAt @map(name: "updated_at")
  pictures   Picture[]
  albums     Album[]
  categories Category[]

  @@map(name: "users")
}

enum Role {
  USER
  ADMIN
}

model Album {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime   @default(now()) @map(name: "created_at")
  updatedAt   DateTime   @default(now()) @updatedAt @map(name: "updated_at")
  pictures    Picture[]
  published   Boolean    @default(false)
  author      User       @relation(fields: [authorId], references: [id])
  authorId    Int
  categories  Category[]
}

model Picture {
  id          Int      @id @default(autoincrement())
  title       String
  url         String
  description String?
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map(name: "updated_at")
  owner       User     @relation(fields: [ownerId], references: [id])
  ownerId     Int
  albums      Album[]
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @updatedAt @map(name: "updated_at")
  albums    Album[]  @relation(references: [id])
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}
